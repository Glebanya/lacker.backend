version: '3.5'

volumes:
  mysql-data:
    name: dev_mysql_data
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /webroot/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /dhparam/
      o: bind
networks:
  dev-back:
    driver: bridge

services:
  app: &app
    build: '.'
    environment:
      APP_ENV: 'dev'
      APP_DEBUG: 'true'
      DATABASE_URL: $DATABASE_URL
      APP_TYPE: 'dev'
    volumes:
 #     - .:/app
      - web-root:/var/www/html
    depends_on:
        mysql:
          condition: service_healthy
    networks:
      - dev-back

  proxy:
    image: nginx:latest
    container_name: proxy
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: $VIRTUAL_HOST
    ports:
      - 80:80
      - 443:443
    volumes:
      - web-root:/var/www/html
      - ./conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      -  web.app
    networks:
      - dev-back

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - proxy
    command: certonly --webroot --webroot-path=/var/www/html --email $COMPANY_EMAIL --agree-tos --no-eff-email --staging -d $VIRTUAL_HOST

  web.app:
    <<: *app
    command: /app/bin/rr serve -c /app/.rr.yaml
    environment:
      VIRTUAL_HOST: $VIRTUAL_HOST

  mysql:
    image: mysql:5.7
    restart: unless-stopped
    ports:
      - 3306:3306
    networks:
      - dev-back
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10